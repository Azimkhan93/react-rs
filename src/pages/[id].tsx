import Head from 'next/head';
import Image from 'next/image';
import Info from '@/components/info/Info';
import Details from '@/components/details/Details';
import type { InferGetServerSidePropsType, GetServerSideProps } from 'next';
import { wrapper } from '@/store/store';
import {
  fetchPages,
  fetchProductById,
  getRunningQueriesThunk,
  useFetchProductByIdQuery,
} from '@/store/productsApi';

type Repo = {
  name: string;
  stargazers_count: number;
};

function DetailsPage() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Info />
        <Details />
      </main>
    </>
  );
}



export const getServerSideProps = wrapper.getServerSideProps(
  (store) => async (context) => {
    const searchText = context.query.search;
    const itemsPerPage = context.query.limit;
    const page = context.query.page;

    const currentPage = Number(page) || 1;
    const skip = (currentPage - 1) * Number(itemsPerPage);

    console.log('context', searchText, itemsPerPage, page);
    if (typeof searchText === 'string') {
      console.log(  store.dispatch(fetchPages.initiate({ searchText, itemsPerPage, skip })));
    }

    const productId = context.params?.id;
    // console.log(context);
    if (typeof productId === 'string') {
      store.dispatch(fetchProductById.initiate(productId));
    }

    await Promise.all(store.dispatch(getRunningQueriesThunk()));

    return {
      props: {},
    };
  }
);

export default DetailsPage;
