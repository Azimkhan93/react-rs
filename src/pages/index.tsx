import Head from 'next/head';
import Info from '@/components/info/Info';
import { wrapper } from '@/store/store';
import { fetchPages, getRunningQueriesThunk } from '@/store/productsApi';

export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Info />
      </main>
    </>
  );
}

export const getServerSideProps = wrapper.getServerSideProps(
  (store) => async (context) => {
    const searchText = context.query.search || '';
    const itemsPerPage = context.query.limit || '10';
    const page = context.query.page || '1';

    const currentPage = Number(page) || 1;
    const skip = (currentPage - 1) * Number(itemsPerPage);

    if (typeof searchText === 'string') {
      store.dispatch(fetchPages.initiate({ searchText, itemsPerPage, skip }));
    }

    if (typeof searchText === 'undefined') {
      store.dispatch(fetchPages.initiate({ itemsPerPage, skip }));
    }

    await Promise.all(store.dispatch(getRunningQueriesThunk()));

    return {
      props: {},
    };
  }
);
